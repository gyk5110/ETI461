!pip install psycopg2-binary

import psycopg2

# Connect to the PostgreSQL database
conn = psycopg2.connect(
    host="your_host",
    database="your_database",
    user="your_username",
    password="your_password"
)
cursor = conn.cursor()

# Create tables
create_users_table = """
CREATE TABLE IF NOT EXISTS users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    password VARCHAR(100) NOT NULL,
    registration_date DATE NOT NULL DEFAULT CURRENT_DATE
);
"""

create_listings_table = """
CREATE TABLE IF NOT EXISTS listings (
    listing_id SERIAL PRIMARY KEY,
    host_id INTEGER REFERENCES users(user_id),
    title VARCHAR(100) NOT NULL,
    description TEXT,
    location VARCHAR(100),
    price_per_night DECIMAL(10, 2),
    availability BOOLEAN DEFAULT TRUE
);
"""

create_reviews_table = """
CREATE TABLE IF NOT EXISTS reviews (
    review_id SERIAL PRIMARY KEY,
    listing_id INTEGER REFERENCES listings(listing_id),
    user_id INTEGER REFERENCES users(user_id),
    rating INTEGER,
    comment TEXT,
    review_date DATE DEFAULT CURRENT_DATE
);
"""

create_bookings_table = """
CREATE TABLE IF NOT EXISTS bookings (
    booking_id SERIAL PRIMARY KEY,
    listing_id INTEGER REFERENCES listings(listing_id),
    user_id INTEGER REFERENCES users(user_id),
    check_in_date DATE NOT NULL,
    check_out_date DATE NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL
);
"""

# Execute table creation queries
cursor.execute(create_users_table)
cursor.execute(create_listings_table)
cursor.execute(create_reviews_table)
cursor.execute(create_bookings_table)

# Commit changes
conn.commit()

# Close connection
cursor.close()
conn.close()

print("Database tables created successfully.")


# Connect to the PostgreSQL database
conn = psycopg2.connect(
    host="your_host",
    database="your_database",
    user="your_username",
    password="your_password"
)
cursor = conn.cursor()

# Sample data insertion
insert_users_query = """
INSERT INTO users (username, email, password) VALUES
('user1', 'user1@example.com', 'password1'),
('user2', 'user2@example.com', 'password2');
"""
cursor.execute(insert_users_query)

insert_listings_query = """
INSERT INTO listings (host_id, title, description, location, price_per_night) VALUES
(1, 'Cozy Apartment', 'A cozy apartment in the heart of the city.', 'New York', 100.00),
(2, 'Beach House', 'Beautiful house by the beach with stunning views.', 'California', 200.00);
"""
cursor.execute(insert_listings_query)

# Commit changes
conn.commit()

# Query data
select_listings_query = "SELECT * FROM listings;"
cursor.execute(select_listings_query)
listings = cursor.fetchall()
for listing in listings:
    print(listing)

# Close connection
cursor.close()
conn.close()
